name: Create, check and install package
description: full sequence of building, checking, installing and validationg the package

inputs:
  pkg-name:
    description: package name inside lightning.*
    required: true
  pkg-import:
    description: package name to be imported
    required: false
    default: ""
  pip-flags:
    description: additional pil install flags
    required: false
    default: ""

runs:
  using: "composite"
  steps:

  - name: install assitant's deps
    run: pip install fire requests
    shell: bash

  - name: install dev. env
    run: pip install "twine==4.0.1" setuptools wheel flake8
    shell: bash

  - name: Create package
    env:
      PACKAGE_NAME: ${{ inputs.pkg-short }}
    run: |
      python setup.py check --metadata --strict
      flake8 src/lightning/ --ignore E402,F401,E501,W391,E303
      python setup.py sdist bdist_wheel
    shell: bash

  - name: Check package
    run: |
      ls -l dist/
      twine check dist/*
      # python setup.py clean
    shell: bash

  - name: Determine package name
    if: ${{ inputs.pkg-import == '' }}
    working-directory: ./dist
    run: python -c "import glob ; ls = glob.glob('*.tar.gz') ; name = '_'.join(ls[0].split('-')[:-1]) ; print(f'PKG_NAME={name}')" >> $GITHUB_ENV
    shell: bash

  - name: Pass package name
    if: ${{ inputs.pkg-import != '' }}
    run: echo "PKG_NAME=${{ inputs.pkg-import }}" >> $GITHUB_ENV
    shell: bash

  - name: Install | Uninstall package - archive
    working-directory: ./dist
    run: |
      # install as archive
      pip install *.tar.gz
      pip list | grep lightning
      python -c "import ${PKG_NAME} ; print(${PKG_NAME}.__version__)"
      pip uninstall -y ${PKG_NAME}
    shell: bash

  - name: Install | Uninstall package - wheel
    working-directory: ./dist
    run: |
      # install as wheel
      pip install *.whl
      pip list | grep lightning
      python -c "import ${PKG_NAME} ; print(${PKG_NAME}.__version__)"
      pip uninstall -y ${PKG_NAME}
    shell: bash
