name: Publish Docker Releases
# https://www.docker.com/blog/first-docker-github-action-is-here
on:
  push:
    branches: 
      - master
  release:
    types:
       - created

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [3.6, 3.7, 3.8]
        pytorch_version: [1.1, 1.2, 1.3, 1.4, 1.5]
    steps:
      - uses: actions/checkout@v2
      - name: Get release version
        # if: !startsWith(github.event.ref, 'refs/tags')
        id: get_version
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:11})

      - name: Publish Master to Docker
        # publish master
        uses: docker/build-push-action@v1
        if: github.event_name == 'push'
        with:
          repository: pytorchlightning/pytorch_lightning
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: docker/Dockerfile
          buildargs: PYTHON_VERSION=${{ matrix.python_version }},PYTORCH_VERSION=${{ matrix.pytorch_version }}
          tags: "nightly-py${{ matrix.python_version }}-torch${{ matrix.pytorch_version }}"
        timeout-minutes: 20

      - name: Publish Releases to Docker
        # only on releases
        uses: docker/build-push-action@v1
        if: (startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release') && !contains(${{ env.RELEASE_VERSION }}, "rc")
        with:
          repository: pytorchlightning/pytorch_lightning
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: docker/Dockerfile
          buildargs: PYTHON_VERSION=${{ matrix.python_version }},PYTORCH_VERSION=${{ matrix.pytorch_version }},LIGHTNING_VERSION=${{ env.RELEASE_VERSION }}
          tags: "${{ env.RELEASE_VERSION }}-py${{ matrix.python_version }}-torch${{ matrix.pytorch_version }},latest-py${{ matrix.python_version }}-torch${{ matrix.pytorch_version }}"
        timeout-minutes: 20
