name: Create Legacy Ckpts

on:
  workflow_dispatch:
    inputs:
      push_to_s3:
        description: 'Push generated checkpoints to S3.'
        default: false
        required: false
        type: boolean
      pl_version:
        description: 'PL version to generate a legacy checkpoint with. If not provided, uses PL from source.'
        default: ''
        required: false
        type: string
  workflow_call:
    inputs:
      push_to_s3:
        description: 'Push generated checkpoints to S3.'
        default: false
        required: false
        type: boolean
      pl_version:
        description: 'PL version to generate a legacy checkpoint with. If not provided, uses PL from source.'
        default: ''
        required: false
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_KEY_ID:
        required: true

jobs:
  create-legacy-ckpts:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: tests/legacy
    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        # Python version here needs to be supported by all PL versions listed in back-compatible-versions.txt.
        python-version: 3.8

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_ID }}
        aws-region: us-east-1

    - name: Install the released package
      working-directory: ./
      env:
        PACKAGE_NAME: pytorch
      run: |
        pip install -e .
        pip list
      if: github.event_name == 'release'

    - name: Generate checkpoints
      run: |
        bash generate_checkpoints.sh ${{ inputs.pl_version }}

    - name: Upload checkpoints to GitHub Actions artifact
      uses: actions/upload-artifact@v3
      with:
        name: checkpoints-${{ github.sha }}
        path: tests/legacy/checkpoints/
      if: always()

    - name: Upload checkpoints to S3 (FIXME remove dryrun)
      run: |
        aws s3 sync --dryrun checkpoints/ s3://pl-public-data/legacy/checkpoints/  # FIXME: remove dryrun
        zip -r checkpoints.zip checkpoints
        aws s3 cp --dryrun checkpoints.zip s3://pl-public-data/legacy/ --acl public-read  # FIXME: remove dryrun
      if: inputs.push_to_s3
