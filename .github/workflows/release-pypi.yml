name: PyPI

# https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:
  push:
    branches: [master, "release/*"]
  release:
    types: [published]
  pull_request:  # this shall test only the part of workflow before publishing
    branches: [master, "release/*"]
    types: [opened, reopened, ready_for_review, synchronize]
    paths:
      - '.github/actions/pkg-publish/*'
      - ".github/workflows/_legacy-checkpoints.yml.yml"
      - ".github/workflows/_build-packages.yml"
      - ".github/workflows/release-pypi.yml"

defaults:
  run:
    shell: bash

env:
  FREEZE_REQUIREMENTS: 1
  TORCH_URL: "https://download.pytorch.org/whl/cpu/torch_stable.html"
  PYTHON_VER: "3.8"

jobs:

  build-packages:
    uses: ./.github/workflows/_build-packages.yml
    with:
      artifact-name: dist-packages-${{ github.sha }}


  upload-packages:
    runs-on: ubuntu-22.04
    needs: build-packages
    if: github.event_name == 'release'
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        name: dist-packages-${{ github.sha }}
        path: dist
    - run: ls -lh dist/
    - name: Upload to release
      uses: AButler/upload-release-assets@v2.0
      with:
        files: 'dist/*/*'
        repo-token: ${{ secrets.GITHUB_TOKEN }}


  pre-publish-packages:
    runs-on: ubuntu-22.04
    needs: build-packages
    if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'
    strategy:
      matrix:
        name: ["APP", "FABRIC", "PYTORCH", "LIGHTNING"]
    steps:
    - uses: actions/checkout@v3  # needed for local action bellow
    - uses: actions/download-artifact@v3
      with:
        name: dist-packages-${{ github.sha }}
        path: dist
    - name: Browse folder
      id: folder
      run: |
        sudo apt install -q -y tree
        tree -L 2 -h dist/
        python -c "print('pkg=' + '${{ matrix.name }}'.lower())" >> $GITHUB_OUTPUT
    - uses: ./.github/actions/pkg-publish
      with:
        pkg-folder: dist/${{ steps.folder.outputs.pkg }}
        pypi-test-token: ${{ secrets[format('PYPI_TEST_TOKEN_{0}', matrix.name)] }}

  waiting:
    needs: [build-packages]
    runs-on: ubuntu-20.04
    if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'
    steps:
    - name: Delay releasing
      uses: juliangruber/sleep-action@v1
      with:
        time: 10m

  publish-packages:
    runs-on: ubuntu-22.04
    needs: [build-packages, waiting]
    if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'
    strategy:
      matrix:
        name: ["APP", "FABRIC", "PYTORCH", "LIGHTNING"]
    steps:
    - uses: actions/checkout@v3  # needed for local action bellow
    - uses: actions/download-artifact@v3
      with:
        name: dist-packages-${{ github.sha }}
        path: dist
    - name: Browse folder
      id: folder
      run: |
        sudo apt install -q -y tree
        tree -L 2 -h dist/
        python -c "print('pkg=' + '${{ matrix.name }}'.lower())" >> $GITHUB_OUTPUT
    - uses: ./.github/actions/pkg-publish
      with:
        pkg-folder: dist/${{ steps.folder.outputs.pkg }}
        pypi-token: ${{ secrets[format('PYPI_TOKEN_{0}', matrix.name)] }}


  legacy-checkpoints:
    needs: [build-packages]
    uses: ./.github/workflows/_legacy-checkpoints.yml
    with:
      push_to_s3: ${{ startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release' }}
      create_pr: ${{ startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release' }}
    secrets: inherit
