name: Issue 3541

# see: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:  # Trigger the workflow on push or pull request, but only for the master branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  pytest:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]
        pytorch_version: [1.7.0.dev20200914, 1.7.0.dev20200915]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: pip-py${{ matrix.python-version }}-${{ hashFiles('requirements/base.txt') }}-${{ hashFiles('requirements/extra.txt') }}
        restore-keys: |
          pip-py${{ matrix.python-version }}-

    - name: Install dependencies
      run: |
        # python -m pip install --upgrade --user pip
        pip install --requirement requirements/base.txt --find-links https://download.pytorch.org/whl/cpu/torch_stable.html --quiet --upgrade
        HOROVOD_BUILD_ARCH_FLAGS="-mfma" pip install --requirement ./requirements/devel.txt --quiet --upgrade
        python --version
        pip --version
        pip list
      shell: bash

    - name: Install PyTorch nightly
      run: |
        pip install torch==${{ matrix.pytorch_version }} -f https://download.pytorch.org/whl/cpu/torch_stable.html
        python -c "import torch; torch.__version__"

    - name: Reinstall Horovod if necessary
      run: |
        HOROVOD_BUILT=$(python -c "import horovod.torch; horovod.torch.nccl_built(); print('SUCCESS')" || true)
        if [[ $HOROVOD_BUILT != "SUCCESS" ]]; then
          pip uninstall -y horovod
          HOROVOD_BUILD_ARCH_FLAGS="-mfma" pip install --no-cache-dir $(grep "horovod" requirements/extra.txt)
        fi
        horovodrun --check-build
      shell: bash

    - name: Cache datasets
      uses: actions/cache@v2
      with:
        path: Datasets # This path is specific to Ubuntu
        # Look to see if there is a cache hit for the corresponding requirements file
        key: pl-dataset

    - name: Tests
      run: |
        # NOTE: do not include coverage report here, see: https://github.com/nedbat/coveragepy/issues/1003
        coverage run --source pytorch_lightning -m pytest pytorch_lightning tests -v --durations=0 --junitxml=junit/test-results-${{ matrix.python-version }}.xml
