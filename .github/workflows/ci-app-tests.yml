name: Test App

# see: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:
  push:
    branches: [master, "release/*"]
  pull_request:
    branches: [master, "release/*"]
    paths:
      - ".github/workflows/ci-app-tests.yml"
      - "src/lightning_app/**"
      - "tests/tests_app/**"
      - "requirements/app/**"
      - "setup.py"
      - ".actions/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

env:
  PACKAGE_NAME: lite
  FREEZE_REQUIREMENTS: 1

jobs:
  app-pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macOS-11, windows-2022]
        python-version: [3.8]
        requires: ["oldest", "latest"]

    # Timeout: https://stackoverflow.com/a/59076067/4521646
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: basic setup
        run: pip install -q -r .actions/requirements.txt

      - name: Set min. dependencies
        if: ${{ matrix.requires == 'oldest' }}
        run: python .actions/assistant.py replace_oldest_ver

      - name: Install Lightning as top-level
        run: pip install -e .
        shell: bash

      - name: DocTests App
        working-directory: src
        run: |
          pip install pytest -q
          python -m pytest lightning_app --ignore-glob="**/cli/*-template/**"

      - name: Get pip cache
        id: pip-cache
        run: |
          python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ matrix.requires }}-${{ hashFiles('requirements/app/base.txt') }}
          restore-keys: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ matrix.requires }}-

      - name: Install dependencies
        run: |
          pip --version
          pip install -r requirements/app/devel.txt --quiet --find-links https://download.pytorch.org/whl/cpu/torch_stable.html
          pip list
        shell: bash

#      - name: Start Redis
#        if: runner.os == 'Linux'
#        uses: supercharge/redis-github-action@1.4.0
#        with:
#          redis-version: 6
#          redis-port: 6379

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Tests
        working-directory: ./tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
          PYTEST_ARTIFACT: results-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.requires }}.xml
        run: |
          coverage run --source lightning_app -m pytest -m "not cloud" tests_app --timeout=300 -vvvv --junitxml=$PYTEST_ARTIFACT --durations=0

      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: unittest-results-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.requires }}
          path: tests/results-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.requires }}.xml
        if: failure()

      - name: Statistics
        if: success()
        working-directory: ./tests
        run: |
          coverage xml -i
          coverage report -i

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: tests/coverage.xml
          flags: cpu,app,pytest
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false

# TODO: figure out why we clone and install quick-start
#      - name: Clone Quick Start Example Repo
#        uses: actions/checkout@v3
#        # TODO: this needs to be git submodule
#        if: matrix.os == 'windows-2022'  # because the install doesn't work on windows
#        with:
#          repository: Lightning-AI/lightning-quick-start
#          ref: 'main'
#          path: lightning-quick-start
#
#      - name: Lightning Install quick-start
#        shell: bash
#        if: matrix.os != 'windows-2022'  # because the install doesn't work on windows
#        run: |
#          python -m lightning install app lightning/quick-start -y
