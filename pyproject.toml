[build-system]
requires = [
    "setuptools",
    "wheel",
]


[tool.isort]
known_first_party = [
    "docs",
    "pl_examples",
    "pytorch_lightning",
    "tests",
]
profile = "black"
line_length = 120
force_sort_within_sections = "False"
order_by_type = "False"


[tool.black]
line-length = 120


[tool.mypy]
files = ["pytorch_lightning"]
disallow_untyped_defs = "True"
ignore_missing_imports = "True"
show_error_codes = "True"
warn_redundant_casts = "True"
warn_unused_configs = "True"
warn_unused_ignores = "True"
allow_redefinition = "True"
# disable this rule as the Trainer attributes are defined in the connectors, not in its __init__
disable_error_code = "attr-defined"
# style choices
warn_no_return = "False"

# Changes mypy default to ignore all errors
[[tool.mypy.overrides]]
module = [
    "pytorch_lightning.*",
]
ignore_errors = "True"

# Override the default for files where we would like to enable type checking
# TODO: Bring more files into this section
[[tool.mypy.overrides]]
module = [
    "pytorch_lightning.callbacks.device_stats_monitor",
    "pytorch_lightning.callbacks.early_stopping",
    "pytorch_lightning.callbacks.gpu_stats_monitor",
    "pytorch_lightning.callbacks.gradient_accumulation_scheduler",
    "pytorch_lightning.callbacks.model_summary",
    "pytorch_lightning.callbacks.progress",
    "pytorch_lightning.callbacks.pruning",
    "pytorch_lightning.callbacks.rich_model_summary",
    "pytorch_lightning.core.optimizer",
    "pytorch_lightning.lite.*",
    "pytorch_lightning.loops.optimization.closure.py",
    "pytorch_lightning.loops.optimization.manual_loop.py",
    "pytorch_lightning.loops.evaluation_loop",
    "pytorch_lightning.trainer.connectors.logger_connector.py",
    "pytorch_lightning.trainer.connectors.logger_connector.fx_validator.py",
    "pytorch_lightning.trainer.connectors.signal_connector",
    "pytorch_lightning.trainer.progress.*",
    "pytorch_lightning.tuner.auto_gpu_select",
    "pytorch_lightning.utilities.apply_func",
    "pytorch_lightning.utilities.argparse",
    "pytorch_lightning.utilities.cli",
    "pytorch_lightning.utilities.cloud_io",
    "pytorch_lightning.utilities.device_dtype_mixin",
    "pytorch_lightning.utilities.device_parser",
    "pytorch_lightning.utilities.model_summary",
    "pytorch_lightning.utilities.parameter_tying",
    "pytorch_lightning.utilities.parsing",
    "pytorch_lightning.utilities.seed",
    "pytorch_lightning.utilities.xla_device",
]
ignore_errors = "False"
