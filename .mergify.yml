# Copyright The PyTorch Lightning team.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

pull_request_rules:

  #- name: Automatic merge on approval
  #  conditions:
  #    - base=master
  #    - "#approved-reviews-by>=3" # number of review approvals
  #    - "#review-requested=0" # no waiting or assigned review
  #    - "#changes-requested-reviews-by=0" # no requested chnages from any reviewer
  #    # this serves as ALL check has to pass as we have actually around 40 tests in total
  #    - "#status-success>=54"
  #    # this is just in case since we rely on GPU tests (note: redundand to the above)
  #    - status-success=continuous-integration/drone/pr
  #    - "status-success=ci/circleci: TPU-tests"
  #    # this is patter-like, unofrunatly serves as `any(...)` (note: redundand to the above)
  #    #- "status-success~=^ci/circleci:"
  #    # no conflict with master branch
  #    - -conflict
  #    # was not closed yet
  #    - -closed
  #    # filter-out GH draft PRs
  #    - -draft
  #  actions:
  #    delete_head_branch: {}
  #    merge:
  #      # https://doc.mergify.io/merge-action.html#strict-merge
  #      # (on head branch) $ git merge --no-ff base
  #      # (on head branch) # Wait for CI to go green
  #      # (on head branch) # Squash all commits
  #      # (on base branch) $ git merge --ff head
  #      strict: true
  #      method: squash
  #    comment:
  #      message: Great job! =)

  - name: warn on conflicts
    conditions:
      - conflict
      - -draft # filter-out GH draft PRs
      - -label="has conflicts"
    actions:
      # comment:
      #   message: This pull request is now in conflict... :(
      label:
        add: [ "has conflicts" ]

  - name: resolved conflicts
    conditions:
      - -conflict
      - label="has conflicts"
      - -draft # filter-out GH draft PRs
      - -merged # not merged yet
      - -closed
    actions:
      label:
        remove: [ "has conflicts" ]

  - name: update PR
    conditions:
      - conflict
      - -draft # filter-out GH draft PRs
      - label="0:] Ready-To-Go"
    actions:
      update: {}

  - name: add core reviewer
    conditions:
      - -conflict # skip if conflict
      - -draft # filter-out GH draft PRs
      - label="0:] Ready-To-Go"
      - "#approved-reviews-by<3" # number of review approvals
    actions:
      request_reviews:
        teams:
          - core-contributors
